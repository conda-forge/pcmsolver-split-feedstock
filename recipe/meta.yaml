{% set name = "PCMSolver" %}
{% set version = "1.2.3" %}
{% set sha256 = "d1ef6bdc268a2e719b36c85125c3543df7a26e1a738daf4483f4ded0c76f5b60" %}
{% set build = 0 %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://github.com/{{ name }}/{{ name|lower }}/archive/v{{ version }}.tar.gz
  patches:
    - 0001-update-cmake-adapt-for-win-add-licenses.patch
  sha256: {{ sha256 }}

build:
  number: {{ build }}
  # Only build for one python version because python module is repackaged as noarch
  skip: True                           # [py != 310]

requirements:
  build:
    - {{ compiler('c') }}              # [unix]
    - {{ compiler('cxx') }}            # [unix]
    - {{ compiler('fortran') }}        # [unix]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - cmake
    - ninja
  host:
    - boost-cpp
    - eigen
    - python
    - zlib
  run:
    - m2w64-gcc-libgfortran            # [win]
    - python

outputs:
  - name: pcmsolver
    build:
      noarch: python
      # Only one pcmsolver variant by having a shared build string for all platforms
      string: py_{{ build }}
    run_exports:
      - {{ pin_subpackage('pcmsolver', max_pin='x.x.x') }}
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('libpcm', max_pin='x.x.x') }}
    files:
      - bin/*.py                                                       # [unix]
      - lib/python3.10/site-packages/pcmsolver                         # [unix]
      - Library/bin/*.py                                               # [win]
      - Lib/site-packages/pcmsolver                                    # [win]
    test:
      imports:
        - pcmsolver
      files:
        - molecule.inp
      requires:
        - m2w64-binutils                                               # [win]   # provides objdump.exe
      commands:
        - ls -l $PREFIX/lib                                            # [unix]
        - ls -l $PREFIX/share/cmake/PCMSolver                          # [unix]
        - ls -l $SP_DIR/pcmsolver                                      # [unix]
        - dir %PREFIX%\\Library\\lib                                   # [win]
        - dir %PREFIX%\\Library\\share\\cmake\\pcmsolver               # [win]
        - dir %SP_DIR%\\pcmsolver                                      # [win]
        # Verify library
        - test -L $PREFIX/lib/libpcm$SHLIB_EXT                         # [unix]
        - test ! -f $PREFIX/lib/libpcm.a                               # [unix]
        - test -f $SP_DIR/pcmsolver/pcmparser.py                       # [unix]
        - if not exist %PREFIX%\\Library\\lib\\libpcm.dll.a exit 1     # [win]   # gnu import lib
        - if not exist %PREFIX%\\Library\\lib\\libpcm.lib exit 1       # [win]   # ms import lib
        - if not exist %PREFIX%\\Library\\bin\\libpcm.dll exit 1       # [win]   # gnu/ms dyn lib
        - if exist %PREFIX%\\Library\\lib\\libpcm.a exit 1             # [win]   # gnu static lib removed
        - if not exist %SP_DIR%\\pcmsolver\\pcmparser.py exit 1        # [win]
        # Verify executable
        - test -f $PREFIX/bin/go_pcm.py                                # [unix]
        - test -f $PREFIX/bin/run_pcm                                  # [unix]
        - if not exist %PREFIX%\\Library\\bin\\go_pcm.py exit 1        # [win]
        - if not exist %PREFIX%\\Library\\bin\\run_pcm.exe exit 1      # [win]
        # Verify accessories
        - test -e $PREFIX/include/PCMSolver/pcmsolver.h                # [unix]
        - test -e $PREFIX/share/cmake/PCMSolver/PCMSolverConfig.cmake  # [unix]
        - if not exist %PREFIX%\\Library\\include\\PCMSolver\\pcmsolver.h exit 1  # [win]
        - if not exist %PREFIX%\\Library\\share\\cmake\\PCMSolver\\PCMSolverConfig.cmake exit 1  # [win]
        # Inspect linkage
        - ldd -v $PREFIX/lib/libpcm$SHLIB_EXT                          # [linux and build_platform == target_platform]
        - otool -L $PREFIX/lib/libpcm$SHLIB_EXT                        # [osx]
        - objdump.exe -p %PREFIX%\\Library\\bin\\libpcm.dll | findstr /i "dll"  # [win]
        # Actually test
        - python $PREFIX/bin/go_pcm.py --inp molecule.inp --exe $PREFIX/bin  # [unix]
        - python %PREFIX%\\Library\\bin\\go_pcm.py --inp molecule.inp --exe %PREFIX%\\Library\\bin  # [win]
        - cat molecule.out                                             # [unix]
        - type molecule.out                                            # [win]

  - name: libpcm
    run_exports:
      - {{ pin_subpackage('pcmsolver', max_pin='x.x.x') }}
    requirements:
      build:
        - {{ compiler('c') }}              # [unix]
        - {{ compiler('cxx') }}            # [unix]
        - {{ compiler('fortran') }}        # [unix]
        - {{ compiler('m2w64_c') }}        # [win]
        - {{ compiler('m2w64_fortran') }}  # [win]
      host:
        - boost-cpp
        - eigen
        - zlib
      run:
        - m2w64-gcc-libgfortran            # [win]
    files:
      - bin/run_pcm                        # [unix]
      - lib/libpcm*                        # [unix]
      - share/cmake/PCMSolver              # [unix]
      - include/PCMSolver                  # [unix]
      - Library/include/PCMSolver          # [win]
      - Library/bin/run_pcm*               # [win]
      - Library/bin/libpcm*                # [win]
      - Library/lib/libpcm*                # [win]
      - Library/share/cmake/PCMSolver      # [win]

    test:
      requires:
        - m2w64-binutils                                               # [win]   # provides objdump.exe
      commands:
        # Verify library
        - test -L $PREFIX/lib/libpcm$SHLIB_EXT                         # [unix]
        - test ! -f $PREFIX/lib/libpcm.a                               # [unix]
        - if not exist %PREFIX%\\Library\\lib\\libpcm.dll.a exit 1     # [win]   # gnu import lib
        - if not exist %PREFIX%\\Library\\lib\\libpcm.lib exit 1       # [win]   # ms import lib
        - if not exist %PREFIX%\\Library\\bin\\libpcm.dll exit 1       # [win]   # gnu/ms dyn lib
        - if exist %PREFIX%\\Library\\lib\\libpcm.a exit 1             # [win]   # gnu static lib removed
        # Verify executable
        - test -f $PREFIX/bin/run_pcm                                  # [unix]
        - if not exist %PREFIX%\\Library\\bin\\run_pcm.exe exit 1      # [win]
        # Verify accessories
        - test -e $PREFIX/include/PCMSolver/pcmsolver.h                # [unix]
        - test -e $PREFIX/share/cmake/PCMSolver/PCMSolverConfig.cmake  # [unix]
        - if not exist %PREFIX%\\Library\\include\\PCMSolver\\pcmsolver.h exit 1  # [win]
        - if not exist %PREFIX%\\Library\\share\\cmake\\PCMSolver\\PCMSolverConfig.cmake exit 1  # [win]
        # Inspect linkage
        - ldd -v $PREFIX/lib/libpcm$SHLIB_EXT                          # [linux and build_platform == target_platform]
        - otool -L $PREFIX/lib/libpcm$SHLIB_EXT                        # [osx]
        - objdump.exe -p %PREFIX%\\Library\\bin\\libpcm.dll | findstr /i "dll"  # [win]

about:
  home: https://github.com/PCMSolver/pcmsolver
  dev_url: https://github.com/PCMSolver/pcmsolver
  doc_url: https://pcmsolver.readthedocs.io/en/stable/
  doc_source_url: https://github.com/PCMSolver/pcmsolver/tree/master/doc
  license: LGPL-3.0-only AND MIT AND MIT-0 AND Apache-2.0
  license_url: https://opensource.org/license/lgpl-3-0/
  license_file:
    - LICENSE
    - THIRD-PARTY-LICENSES
  license_family: LGPL
  summary: "R. Di Remigio & L. Frediani's Polarizable Continuum Model (PCM)"

extra:
  recipe-maintainers:
    - loriab
    - robertodr
