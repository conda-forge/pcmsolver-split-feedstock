From f31662a6ad976828a75f3d5d07a519f3b5e3934d Mon Sep 17 00:00:00 2001
From: "Lori A. Burns" <lori.burns@gmail.com>
Date: Sat, 19 Dec 2020 13:48:18 -0500
Subject: [PATCH] update cmake, adapt for win, add licenses

---
 CMakeLists.txt                         |   6 +-
 THIRD-PARTY-LICENSES                   | 419 +++++++++++++++++++++++++++++++++
 cmake/PCMSolverConfig.cmake.in         | 193 ++++++++-------
 cmake/custom/FindEigen3.cmake          |  81 -------
 cmake/custom/compilers/CXXFlags.cmake  |   2 +-
 cmake/custom/eigen.cmake               |   2 +-
 cmake/custom/find_python_module.cmake  |   2 +-
 cmake/custom/hide_FindEigen3.cmake     |  81 +++++++
 cmake/custom/pcmsolver.cmake           |  10 +-
 cmake/downloaded/autocmake_boost.cmake |   1 +
 cmake/downloaded/boost_cleanup.cmake   |  14 +-
 cmake/downloaded/boost_configure.cmake |   2 +-
 setup.py                               |   4 +-
 src/CMakeLists.txt                     |  35 ++-
 src/bin/CMakeLists.txt                 |  23 +-
 src/cavity/ICavity.cpp                 |   1 +
 tests/CMakeLists.txt                   |   2 +-
 tests/input/CMakeLists.txt             |  10 +-
 tests/standalone/CMakeLists.txt        |  10 +-
 tools/getkw.py                         |   6 +-
 tools/pcmparser.py                     |  11 +-
 tools/pyparsing.py                     |   8 +-
 tools/versioner.py                     |  27 ++-
 23 files changed, 722 insertions(+), 228 deletions(-)
 create mode 100644 THIRD-PARTY-LICENSES
 delete mode 100644 cmake/custom/FindEigen3.cmake
 create mode 100644 cmake/custom/hide_FindEigen3.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0375891..4df7132 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,7 +2,8 @@
 # Copyright (c) 2015-2018 by Radovan Bast, Roberto Di Remigio, Jonas Juselius, and contributors.
 
 # set minimum cmake version
-cmake_minimum_required(VERSION 3.3 FATAL_ERROR)
+cmake_minimum_required(VERSION 3.16 FATAL_ERROR)
+cmake_policy(SET CMP0053 NEW)
 
 # project name
 project(PCMSolver LANGUAGES CXX C Fortran)
@@ -71,7 +72,8 @@ include(gperftools)
 include(autocmake_int64)
 include(autocmake_omp)
 include(autocmake_safeguards)
-include(autocmake_python_interpreter)
+#include(autocmake_python_interpreter)
+find_package(Python REQUIRED COMPONENTS Interpreter)
 include(pcmsolver)
 include(api)
 include(autocmake_boost)
diff --git a/THIRD-PARTY-LICENSES b/THIRD-PARTY-LICENSES
new file mode 100644
index 0000000..30f4222
--- /dev/null
+++ b/THIRD-PARTY-LICENSES
@@ -0,0 +1,419 @@
+This project incorporates material from the project(s) listed below
+(collectively, "Third Party Code"). PCMSolver is not the original author
+of the Third Party Code. The original copyright notice and license under
+which PCMSolver received such Third Party Code are set out below. This
+Third Party Code is licensed to you under their original license terms
+set forth below.
+
+<< 1 >> external/Catch
+
+Copyright (c) 2012 Two Blue Cubes Ltd.
+
+Distributed under the Boost Software License, Version 1.0.
+
+Boost Software License - Version 1.0 - August 17th, 2003
+
+Permission is hereby granted, free of charge, to any person or organization
+obtaining a copy of the software and accompanying documentation covered by
+this license (the "Software") to use, reproduce, display, distribute,
+execute, and transmit the Software, and to prepare derivative works of the
+Software, and to permit third-parties to whom the Software is furnished to
+do so, all subject to the following:
+
+The copyright notices in the Software and this entire statement, including
+the above license grant, this restriction and the following disclaimer,
+must be included in all copies of the Software, in whole or in part, and
+all derivative works of the Software, unless such copies or derivative
+works are solely in the form of machine-executable object code generated by
+a source language processor.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
+SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
+FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
+ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+DEALINGS IN THE SOFTWARE.
+
+
+<< 2 >> external/libtaylor
+
+Copyright (c) 2009 Ulf Ekstrom <uekstrom@gmail.com>
+
+MIT License
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be included
+in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
+NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
+OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
+THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+
+<< 3 >> src/utils/RungeKutta4.hpp & .cpp
+
+The Runge-Kutta source code is Copyright(c) 2013 John Burkardt.
+
+GNU Lesser General Public License version 3, or (at your option) any later version.
+
+See file LICENSE for license text.
+
+
+<< 4 >> src/utils/cnpy.hpp & .cpp
+
+Copyright (C) 2011  Carl Rogers
+
+MIT License
+
+See << 2 >> for license text.
+
+
+<< 5 >> src/utils/Legendre.hpp
+
+Copyright (C) 2014 by James A. Chappell
+
+MIT No Attribution License
+
+Permission is hereby granted, free of charge, to any person
+obtaining a copy of this software and associated documentation files
+(the “Software”), to deal in the Software without restriction,
+including without limitation the rights to use, copy, modify, merge,
+publish, distribute, sublicense, and/or sell copies of the Software,
+and to permit persons to whom the Software is furnished to do so.
+
+THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
+NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
+DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
+OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
+THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+
+<< 6 >> src/pedra/pedra_dlapack.f90
+
+Copyright (C) 2006  Joachim Kopp
+
+GNU Lesser General Public License version 2.1, or (at your option) any later version.
+
+0. This License Agreement applies to any software library or other program which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Lesser General Public License (also called “this License”). Each licensee is addressed as “you”.
+
+A “library” means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables.
+
+The “Library”, below, refers to any such software library or work which has been distributed under these terms. A “work based on the Library” means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term “modification”.)
+
+“Source code” for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library.
+
+Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does.
+
+1. You may copy and distribute verbatim copies of the Library’s complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library.
+
+You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.
+
+2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:
+
+a) The modified work must itself be a software library.
+
+b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change.
+
+c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License.
+
+d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful.
+
+(For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.
+
+3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices.
+
+Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy.
+
+This option is useful when you wish to copy part of the code of the Library into a program that is not a library.
+
+4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange.
+
+If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code.
+
+5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a “work that uses the Library”. Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License.
+
+However, linking a “work that uses the Library” with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a “work that uses the library”. The executable is therefore covered by this License. Section 6 states terms for distribution of such executables.
+
+When a “work that uses the Library” uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law.
+
+If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.)
+
+Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself.
+
+6. As an exception to the Sections above, you may also combine or link a “work that uses the Library” with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer’s own use and reverse engineering for debugging such modifications.
+
+You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things:
+
+a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable “work that uses the Library”, as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.)
+
+b) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (1) uses at run time a copy of the library already present on the user’s computer system, rather than copying library functions into the executable, and (2) will operate properly with a modified version of the library, if the user installs one, as long as the modified version is interface-compatible with the version that the work was made with.
+
+c) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution.
+
+d) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place.
+
+e) Verify that the user has already received a copy of these materials or that you have already sent this user a copy.
+
+For an executable, the required form of the “work that uses the Library” must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the materials to be distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.
+
+It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute.
+
+7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things:
+
+a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above.
+
+b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work.
+
+8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.
+
+9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it.
+
+10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients’ exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties with this License.
+
+11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.
+
+This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.
+
+12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.
+
+13. The Free Software Foundation may publish revised and/or new versions of the Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and “any later version”, you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation.
+
+14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.
+
+NO WARRANTY
+
+15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
+
+
+<< 7 >> tools/pyparsing.py
+
+Copyright (c) 2003-2013  Paul T. McGuire
+
+MIT License
+
+See << 2 >> for license text.
+
+
+<< 8 >> tools/versioner.py
+
+Copyright (c) 2007-2022 The Psi4 Developers.
+
+GNU Lesser General Public License version 3 only.
+
+See file LICENSE for license text.
+
+
+<< 9 >> tools/getkw.py
+
+Written by Jonas Juselius <jonas.juselius@chem.uit.no> University of Tromsø, 2006
+
+(upstream switched from GPL2 to Apache in 2015: https://github.com/juselius/libgetkw/commit/5c8f26558e19947b39f4a831489f6e1fb6b67ccf)
+
+Apache License, Version 2.0
+
+1. Definitions.
+“License” shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.
+
+“Licensor” shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.
+
+“Legal Entity” shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, “control” means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.
+
+“You” (or “Your”) shall mean an individual or Legal Entity exercising permissions granted by this License.
+
+“Source” form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.
+
+“Object” form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.
+
+“Work” shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).
+
+“Derivative Works” shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.
+
+“Contribution” shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, “submitted” means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as “Not a Contribution.”
+
+“Contributor” shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.
+
+2. Grant of Copyright License.
+Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.
+
+3. Grant of Patent License.
+Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.
+
+4. Redistribution.
+You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:
+
+You must give any other recipients of the Work or Derivative Works a copy of this License; and
+You must cause any modified files to carry prominent notices stating that You changed the files; and
+You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and
+If the Work includes a “NOTICE” text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.
+You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.
+
+5. Submission of Contributions.
+Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.
+
+6. Trademarks.
+This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.
+
+7. Disclaimer of Warranty.
+Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.
+
+8. Limitation of Liability.
+In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.
+
+9. Accepting Warranty or Additional Liability.
+While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.
+
+
+<< 10 >> cmake/downloaded/boost_1_54_0.zip
+
+Boost Software License 1.0 (BSL-1.0)
+
+See << 1 >> for license text.
+
+
+<< 11 >> external/eigen3
+
+This Source Code Form is subject to the terms of the Mozilla Public License v. 2.0.
+
+1. Definitions
+1.1. “Contributor”
+means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.
+1.2. “Contributor Version”
+means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor’s Contribution.
+1.3. “Contribution”
+means Covered Software of a particular Contributor.
+1.4. “Covered Software”
+means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.
+1.5. “Incompatible With Secondary Licenses”
+means
+that the initial Contributor has attached the notice described in Exhibit B to the Covered Software; or
+that the Covered Software was made available under the terms of version 1.1 or earlier of the License, but not also under the terms of a Secondary License.
+1.6. “Executable Form”
+means any form of the work other than Source Code Form.
+1.7. “Larger Work”
+means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.
+1.8. “License”
+means this document.
+1.9. “Licensable”
+means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.
+1.10. “Modifications”
+means any of the following:
+any file in Source Code Form that results from an addition to, deletion from, or modification of the contents of Covered Software; or
+any new file in Source Code Form that contains any Covered Software.
+1.11. “Patent Claims” of a Contributor
+means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.
+1.12. “Secondary License”
+means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.
+1.13. “Source Code Form”
+means the form of the work preferred for making modifications.
+1.14. “You” (or “Your”)
+means an individual or a legal entity exercising rights under this License. For legal entities, “You” includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, “control” means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.
+2. License Grants and Conditions
+2.1. Grants
+Each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:
+
+under intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and
+under Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.
+2.2. Effective Date
+The licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.
+
+2.3. Limitations on Grant Scope
+The licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:
+
+for any code that a Contributor has removed from Covered Software; or
+for infringements caused by: (i) Your and any other third party’s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or
+under Patent Claims infringed by Covered Software in the absence of its Contributions.
+This License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).
+
+2.4. Subsequent Licenses
+No Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).
+
+2.5. Representation
+Each Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.
+
+2.6. Fair Use
+This License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.
+
+2.7. Conditions
+Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.
+
+3. Responsibilities
+3.1. Distribution of Source Form
+All distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients’ rights in the Source Code Form.
+
+3.2. Distribution of Executable Form
+If You distribute Covered Software in Executable Form then:
+
+such Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and
+You may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients’ rights in the Source Code Form under this License.
+3.3. Distribution of a Larger Work
+You may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).
+
+3.4. Notices
+You may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.
+
+3.5. Application of Additional Terms
+You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.
+
+4. Inability to Comply Due to Statute or Regulation
+If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.
+
+5. Termination
+5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.
+
+5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.
+
+5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.
+
+6. Disclaimer of Warranty
+Covered Software is provided under this License on an “as is” basis, without warranty of any kind, either expressed, implied, or statutory, including, without limitation, warranties that the Covered Software is free of defects, merchantable, fit for a particular purpose or non-infringing. The entire risk as to the quality and performance of the Covered Software is with You. Should any Covered Software prove defective in any respect, You (not any Contributor) assume the cost of any necessary servicing, repair, or correction. This disclaimer of warranty constitutes an essential part of this License. No use of any Covered Software is authorized under this License except under this disclaimer.
+
+7. Limitation of Liability
+Under no circumstances and under no legal theory, whether tort (including negligence), contract, or otherwise, shall any Contributor, or anyone who distributes Covered Software as permitted above, be liable to You for any direct, indirect, special, incidental, or consequential damages of any character including, without limitation, damages for lost profits, loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses, even if such party shall have been informed of the possibility of such damages. This limitation of liability shall not apply to liability for death or personal injury resulting from such party’s negligence to the extent applicable law prohibits such limitation. Some jurisdictions do not allow the exclusion or limitation of incidental or consequential damages, so this exclusion and limitation may not apply to You.
+
+8. Litigation
+Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party’s ability to bring cross-claims or counter-claims.
+
+9. Miscellaneous
+This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.
+
+10. Versions of the License
+10.1. New Versions
+Mozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.
+
+10.2. Effect of New Versions
+You may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.
+
+10.3. Modified Versions
+If you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).
+
+10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses
+If You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.
+
diff --git a/cmake/PCMSolverConfig.cmake.in b/cmake/PCMSolverConfig.cmake.in
index 0dbbd44..fdc0fbc 100644
--- a/cmake/PCMSolverConfig.cmake.in
+++ b/cmake/PCMSolverConfig.cmake.in
@@ -7,16 +7,29 @@
 # ::
 #
 #   PCMSolver_FOUND - true if PCMSolver and all required components found on the system
-#   PCMSolver_VERSION - PCMSolver version in format Major.Minor.Release
+#   PCMSolver_VERSION - PCMSolver version in format Major.Minor.Release. Prefer target variable.
 #   PCMSolver_INCLUDE_DIRS - Directory where the PCMSolver/pcmsolver.h,
 #                            PCMSolver/PCMInput.h headers and PCMSolver/pcmsolver.f90 source file are located.
-#   PCMSolver_INCLUDE_DIR - same as DIRS
-#   PCMSolver_DEFINITIONS: Definitions necessary to use PCMSolver, namely USING_PCMSolver.
-#   PCMSolver_LIBRARIES - PCMSolver library to link against.
-#   PCMSolver_LIBRARY - same as LIBRARIES
-#   PCMSolver_EXECUTABLE - path to PCMSolver executable
+#                            Prefer targets.
+#   PCMSolver_INCLUDE_DIR - same as DIRS. Prefer targets.
+#   PCMSolver_DEFINITIONS: Definitions necessary to use PCMSolver, namely USING_PCMSolver. Prefer targets.
+#   PCMSolver_LIBRARIES - PCMSolver library to link against plus any dependent libraries. Prefer targets.
+#   PCMSolver_LIBRARY - same as LIBRARIES. Prefer targets.
+#   PCMSolver_EXECUTABLE - path to PCMSolver executable. Prefer targets.
+#   PCMSolver_PYMOD - path to PCMSolver python modules. Prefer target variable.
+#
+#
+# Target variables:
+#
+# It is preferred to use properties set on the base target rather than using the above variables.
+#
+# ::
+#
+#   PCMSolver_VERSION - PCMSolver version in format Major.Minor.Release
 #   PCMSolver_PYMOD - path to PCMSolver python modules
 #
+#   get_property(_ver TARGET PCMSolver::pcm PROPERTY PCMSolver_VERSION)
+#
 #
 # Available components: shared static exe
 #
@@ -31,10 +44,16 @@
 #
 # ::
 #
-# If PCMSolver is found, this module defines the following :prop_tgt:`IMPORTED`
-# target. ::
+# If PCMSolver is found and no language components are requested, this module
+# defines at least the following :prop_tgt:`IMPORTED` target. ::
+#
+#   PCMSolver::pcm - the main PCMSolver library with header & defs attached.
+#
+# If PCMSolver is found, depending on components requested and fullness of the
+# installation, this module defines up to the following :prop_tgt:`IMPORTED` targets. ::
 #
 #   PCMSolver::pcm - the main PCMSolver library with header & defs attached.
+#   PCMSolver::exe - the PCMSolver run_pcm program (COMPONENT exe)
 #
 #
 # Suggested usage:
@@ -42,7 +61,7 @@
 # ::
 #
 #   find_package(PCMSolver)
-#   find_package(PCMSolver 1.1.7 CONFIG REQUIRED COMPONENTS shared)
+#   find_package(PCMSolver 1.2.3 CONFIG REQUIRED COMPONENTS shared)
 #
 #
 # The following variables can be set to guide the search for this package:
@@ -54,111 +73,89 @@
 #   PATH - environment variable, set to bin directory of this package
 #   CMAKE_DISABLE_FIND_PACKAGE_PCMSolver - CMake variable, disables
 #       find_package(PCMSolver) perhaps to force internal build
+#
 
 @PACKAGE_INIT@
 
-set(PN PCMSolver)
-set (_valid_components
-    static
-    shared
-    exe
-)
+set(pcm PCMSolver)  # NameSpace
 
-# find includes
-unset(_temp_h CACHE)
-find_path(_temp_h
-          NAMES PCMSolver/pcmsolver.h
-          PATHS ${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_INCLUDEDIR@
-          NO_DEFAULT_PATH)
-if(_temp_h)
-    set(${PN}_INCLUDE_DIR "${_temp_h}")
-    set(${PN}_INCLUDE_DIRS ${${PN}_INCLUDE_DIR})
-else()
-    set(${PN}_FOUND 0)
-    if(NOT CMAKE_REQUIRED_QUIET)
-        message(STATUS "${PN}Config missing component: header (${PN}: ${_temp_h})")
-    endif()
+# check library style component
+# * using EXISTS Targets-shared instead of @SHARED_LIBRARY_ONLY@ so packages can
+#   truncate their builds (e.g., build static for tests but only ship shared)
+if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/${pcm}Targets-shared.cmake")
+    set(${pcm}_shared_FOUND 1)
 endif()
-
-# find executable
-list(FIND ${PN}_FIND_COMPONENTS "exe" _seek_exe)
-unset(_temp_exe CACHE)
-find_program(_temp_exe
-             NAMES run_pcm
-             PATHS ${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_BINDIR@
-             NO_DEFAULT_PATH)
-if(_temp_exe)
-    set(${PN}_EXECUTABLE "{_temp_exe}")
-    if(_seek_exe GREATER -1)
-        set(${PN}_exe_FOUND 1)
-    endif()
-else()
-    if(_seek_exe GREATER -1)
-        if(NOT CMAKE_REQUIRED_QUIET)
-            message(STATUS "${PN}Config missing component: executable (${PN}: ${_temp_exe})")
-        endif()
-    endif()
+if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/${pcm}Targets-static.cmake")
+    set(${pcm}_static_FOUND 1)
 endif()
+list(FIND ${pcm}_FIND_COMPONENTS "shared" _seek_shared)
+list(FIND ${pcm}_FIND_COMPONENTS "static" _seek_static)
 
-# find library: shared, static, or whichever
-set(_hold_library_suffixes ${CMAKE_FIND_LIBRARY_SUFFIXES})
-list(FIND ${PN}_FIND_COMPONENTS "shared" _seek_shared)
-list(FIND ${PN}_FIND_COMPONENTS "static" _seek_static)
-if(_seek_shared GREATER -1)
-    set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_SHARED_LIBRARY_SUFFIX})
-elseif(_seek_static GREATER -1)
-    set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_STATIC_LIBRARY_SUFFIX})
+# check executable component
+if (@BUILD_STANDALONE@ AND EXISTS "${CMAKE_CURRENT_LIST_DIR}/${pcm}Targets-exe.cmake")  # BUILD_STANDALONE
+    set(${pcm}_exe_FOUND 1)
 endif()
-unset(_temp CACHE)
-find_library(_temp
-             NAMES pcm
-             PATHS ${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_LIBDIR@
-             NO_DEFAULT_PATH)
-if(_temp)
-    set(${PN}_LIBRARY "${_temp}")
-    if(_seek_shared GREATER -1)
-        set(${PN}_shared_FOUND 1)
-    elseif(_seek_static GREATER -1)
-        set(${PN}_static_FOUND 1)
-    endif()
-else()
-    if(_seek_shared GREATER -1)
-        if(NOT CMAKE_REQUIRED_QUIET)
-            message(STATUS "${PN}Config missing component: shared library (${PN}: ${_temp})")
-        endif()
-    elseif(_seek_static GREATER -1)
-        if(NOT CMAKE_REQUIRED_QUIET)
-            message(STATUS "${PN}Config missing component: static library (${PN}: ${_temp})")
-        endif()
-    else()
-        set(${PN}_FOUND 0)
-        if(NOT CMAKE_REQUIRED_QUIET)
-            message(STATUS "${PN}Config missing component: library (${PN}: ${_temp})")
-        endif()
-    endif()
+list(FIND ${pcm}_FIND_COMPONENTS "exe" _seek_exe)
+
+# check library dependency available
+include(CMakeFindDependencyMacro)
+if(NOT TARGET ZLIB::ZLIB)
+    find_dependency(ZLIB)
 endif()
-set(CMAKE_FIND_LIBRARY_SUFFIXES ${_hold_library_suffixes})
-set(${PN}_LIBRARIES ${${PN}_LIBRARY})
-set(${PN}_DEFINITIONS USING_${PN})
-set(${PN}_PYMOD ${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_LIBDIR@/@PYMOD_INSTALL_LIBDIR@)
 
-check_required_components(${PN})
+# Check all required components are available before trying to load any
+check_required_components(${pcm})
 
 #-----------------------------------------------------------------------------
 # Don't include targets if this file is being picked up by another
 # project which has already built this as a subproject
 #-----------------------------------------------------------------------------
-if(NOT TARGET ${PN}::pcm)
-    get_filename_component(_fext ${${PN}_LIBRARY} EXT)
-    if(${_fext} STREQUAL ${CMAKE_SHARED_LIBRARY_SUFFIX})
-        include("${CMAKE_CURRENT_LIST_DIR}/${PN}Targets-shared.cmake")
-    else()
-        include("${CMAKE_CURRENT_LIST_DIR}/${PN}Targets-static.cmake")
+if(NOT TARGET ${pcm}::pcm)
+    if(_seek_static GREATER -1)
+        include("${CMAKE_CURRENT_LIST_DIR}/${pcm}Targets-static.cmake")
+    elseif(_seek_shared GREATER -1)
+        include("${CMAKE_CURRENT_LIST_DIR}/${pcm}Targets-shared.cmake")
+    elseif(NOT @STATIC_LIBRARY_ONLY@)  # STATIC_LIBRARY_ONLY
+        include("${CMAKE_CURRENT_LIST_DIR}/${pcm}Targets-shared.cmake")
+    elseif(NOT @SHARED_LIBRARY_ONLY@)  # SHARED_LIBRARY_ONLY
+        include("${CMAKE_CURRENT_LIST_DIR}/${pcm}Targets-static.cmake")
     endif()
 
-    include(CMakeFindDependencyMacro)
-    if(NOT TARGET ZLIB::ZLIB)
-        find_dependency(ZLIB)
+    get_property(_loc TARGET ${pcm}::pcm PROPERTY LOCATION)
+    get_property(_ill TARGET ${pcm}::pcm PROPERTY INTERFACE_LINK_LIBRARIES)
+    get_property(_iid TARGET ${pcm}::pcm PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
+    get_property(_icd TARGET ${pcm}::pcm PROPERTY INTERFACE_COMPILE_DEFINITIONS)
+    set(${pcm}_LIBRARY ${_loc})
+    set(${pcm}_LIBRARIES ${_loc};${_ill})
+    set(${pcm}_INCLUDE_DIR ${_iid})
+    set(${pcm}_INCLUDE_DIRS ${_iid})
+    set(${pcm}_DEFINITIONS ${_icd})
+
+    if(${pcm}_exe_FOUND)
+        include("${CMAKE_CURRENT_LIST_DIR}/${pcm}Targets-exe.cmake")
+        get_property(${pcm}_EXECUTABLE TARGET ${pcm}::exe PROPERTY LOCATION)
     endif()
-endif()
 
+    set(${pcm}_PYMOD ${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_LIBDIR@@PYMOD_INSTALL_LIBDIR@)  # CMAKE_INSTALL_LIBDIR, PYMOD_INSTALL_LIBDIR
+
+    if (CMAKE_VERSION VERSION_GREATER 3.15)
+        message(VERBOSE "PCMSolver::pcm")
+
+        get_property(_ver TARGET ${pcm}::pcm PROPERTY PCMSolver_VERSION)
+        get_property(_pym TARGET ${pcm}::pcm PROPERTY PCMSolver_PYMOD)
+        message(VERBOSE "${pcm}::pcm.${pcm}_VERSION ${_ver}")
+        message(VERBOSE "${pcm}::pcm.${pcm}_PYMOD   ${_pym}")
+
+        message(VERBOSE "${pcm}_FOUND                  ${${pcm}_FOUND}")
+        message(VERBOSE "${pcm}_VERSION                ${${pcm}_VERSION}")
+        message(VERBOSE "${pcm}_DEFINITIONS            ${${pcm}_DEFINITIONS}")
+        message(VERBOSE "${pcm}_EXECUTABLE             ${${pcm}_EXECUTABLE}")
+        message(VERBOSE "${pcm}_PYMOD                  ${${pcm}_PYMOD}")
+
+        message(VERBOSE "${pcm}_LIBRARY                ${${pcm}_LIBRARY}")
+        message(VERBOSE "${pcm}_LIBRARIES              ${${pcm}_LIBRARIES}")
+        message(VERBOSE "${pcm}_INCLUDE_DIR            ${${pcm}_INCLUDE_DIR}")
+        message(VERBOSE "${pcm}_INCLUDE_DIRS           ${${pcm}_INCLUDE_DIRS}")
+    endif()
+
+endif()
diff --git a/cmake/custom/FindEigen3.cmake b/cmake/custom/FindEigen3.cmake
deleted file mode 100644
index 9c546a0..0000000
--- a/cmake/custom/FindEigen3.cmake
+++ /dev/null
@@ -1,81 +0,0 @@
-# - Try to find Eigen3 lib
-#
-# This module supports requiring a minimum version, e.g. you can do
-#   find_package(Eigen3 3.1.2)
-# to require version 3.1.2 or newer of Eigen3.
-#
-# Once done this will define
-#
-#  EIGEN3_FOUND - system has eigen lib with correct version
-#  EIGEN3_INCLUDE_DIR - the eigen include directory
-#  EIGEN3_VERSION - eigen version
-
-# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>
-# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>
-# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>
-# Redistribution and use is allowed according to the terms of the 2-clause BSD license.
-
-if(NOT Eigen3_FIND_VERSION)
-  if(NOT Eigen3_FIND_VERSION_MAJOR)
-    set(Eigen3_FIND_VERSION_MAJOR 2)
-  endif(NOT Eigen3_FIND_VERSION_MAJOR)
-  if(NOT Eigen3_FIND_VERSION_MINOR)
-    set(Eigen3_FIND_VERSION_MINOR 91)
-  endif(NOT Eigen3_FIND_VERSION_MINOR)
-  if(NOT Eigen3_FIND_VERSION_PATCH)
-    set(Eigen3_FIND_VERSION_PATCH 0)
-  endif(NOT Eigen3_FIND_VERSION_PATCH)
-
-  set(Eigen3_FIND_VERSION "${Eigen3_FIND_VERSION_MAJOR}.${Eigen3_FIND_VERSION_MINOR}.${Eigen3_FIND_VERSION_PATCH}")
-endif(NOT Eigen3_FIND_VERSION)
-
-macro(_eigen3_check_version)
-  file(READ "${EIGEN3_INCLUDE_DIR}/Eigen/src/Core/util/Macros.h" _eigen3_version_header)
-
-  string(REGEX MATCH "define[ \t]+EIGEN_WORLD_VERSION[ \t]+([0-9]+)" _eigen3_world_version_match "${_eigen3_version_header}")
-  set(EIGEN3_WORLD_VERSION "${CMAKE_MATCH_1}")
-  string(REGEX MATCH "define[ \t]+EIGEN_MAJOR_VERSION[ \t]+([0-9]+)" _eigen3_major_version_match "${_eigen3_version_header}")
-  set(EIGEN3_MAJOR_VERSION "${CMAKE_MATCH_1}")
-  string(REGEX MATCH "define[ \t]+EIGEN_MINOR_VERSION[ \t]+([0-9]+)" _eigen3_minor_version_match "${_eigen3_version_header}")
-  set(EIGEN3_MINOR_VERSION "${CMAKE_MATCH_1}")
-
-  set(EIGEN3_VERSION ${EIGEN3_WORLD_VERSION}.${EIGEN3_MAJOR_VERSION}.${EIGEN3_MINOR_VERSION})
-  if(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
-    set(EIGEN3_VERSION_OK FALSE)
-  else(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
-    set(EIGEN3_VERSION_OK TRUE)
-  endif(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
-
-  if(NOT EIGEN3_VERSION_OK)
-
-    message(STATUS "Eigen3 version ${EIGEN3_VERSION} found in ${EIGEN3_INCLUDE_DIR}, "
-                   "but at least version ${Eigen3_FIND_VERSION} is required")
-  endif(NOT EIGEN3_VERSION_OK)
-endmacro(_eigen3_check_version)
-
-if (EIGEN3_INCLUDE_DIR)
-
-  # in cache already
-  _eigen3_check_version()
-  set(EIGEN3_FOUND ${EIGEN3_VERSION_OK})
-
-else (EIGEN3_INCLUDE_DIR)
-
-  find_path(EIGEN3_INCLUDE_DIR NAMES signature_of_eigen3_matrix_library
-      PATHS
-      ${CMAKE_INSTALL_PREFIX}/include
-      ${KDE4_INCLUDE_DIR}
-      PATH_SUFFIXES eigen3 eigen
-    )
-
-  if(EIGEN3_INCLUDE_DIR)
-    _eigen3_check_version()
-  endif(EIGEN3_INCLUDE_DIR)
-
-  include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(Eigen3 DEFAULT_MSG EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK)
-
-  mark_as_advanced(EIGEN3_INCLUDE_DIR)
-
-endif(EIGEN3_INCLUDE_DIR)
-
diff --git a/cmake/custom/compilers/CXXFlags.cmake b/cmake/custom/compilers/CXXFlags.cmake
index 4c9afe5..b6f6fd8 100644
--- a/cmake/custom/compilers/CXXFlags.cmake
+++ b/cmake/custom/compilers/CXXFlags.cmake
@@ -7,7 +7,7 @@ if(ENABLE_CXX11_SUPPORT)
     RESULT cxx11_flag
     LANGUAGE CXX
     REQUIRED
-    FLAGS "-std=c++11;-std=c++0x;--c++11;--c++0x"
+    FLAGS "-std=c++11;/std:c++11;-std=c++0x;--c++11;--c++0x"
     )
   if(cxx11_flag)
     set(CXX_STANDARD_FLAG ${cxx11_flag})
diff --git a/cmake/custom/eigen.cmake b/cmake/custom/eigen.cmake
index bd635df..7882a8e 100644
--- a/cmake/custom/eigen.cmake
+++ b/cmake/custom/eigen.cmake
@@ -13,7 +13,7 @@
 if(EIGEN3_ROOT)
   set(EIGEN3_INCLUDE_DIR ${EIGEN3_ROOT}/include)
   find_package(Eigen3 3.3.0)
-  message(STATUS "Eigen " ${EIGEN3_VERSION} " is located here: " ${EIGEN3_INCLUDE_DIR})
+  message(STATUS "Eigen FOUND " ${EIGEN3_VERSION_STRING} " is located here: " ${EIGEN3_INCLUDE_DIR})
   if(NOT EIGEN3_FOUND)
     set(EIGEN3_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/external/eigen3/include/eigen3)
     message(STATUS "Eigen 3.3.2 is located here: " ${EIGEN3_INCLUDE_DIR})
diff --git a/cmake/custom/find_python_module.cmake b/cmake/custom/find_python_module.cmake
index 314a68e..af48089 100644
--- a/cmake/custom/find_python_module.cmake
+++ b/cmake/custom/find_python_module.cmake
@@ -9,7 +9,7 @@ macro(find_python_module module)
 		endif()
 		# A module's location is usually a directory, but for binary modules
 		# it's a .so file.
-		execute_process(COMMAND "${PYTHON_EXECUTABLE}" "-c"
+		execute_process(COMMAND "${Python_EXECUTABLE}" "-c"
 			"import re, ${module}; print(re.compile('/__init__.py.*').sub('',${module}.__file__))"
 			RESULT_VARIABLE _${module}_status
 			OUTPUT_VARIABLE _${module}_location
diff --git a/cmake/custom/hide_FindEigen3.cmake b/cmake/custom/hide_FindEigen3.cmake
new file mode 100644
index 0000000..9c546a0
--- /dev/null
+++ b/cmake/custom/hide_FindEigen3.cmake
@@ -0,0 +1,81 @@
+# - Try to find Eigen3 lib
+#
+# This module supports requiring a minimum version, e.g. you can do
+#   find_package(Eigen3 3.1.2)
+# to require version 3.1.2 or newer of Eigen3.
+#
+# Once done this will define
+#
+#  EIGEN3_FOUND - system has eigen lib with correct version
+#  EIGEN3_INCLUDE_DIR - the eigen include directory
+#  EIGEN3_VERSION - eigen version
+
+# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>
+# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>
+# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>
+# Redistribution and use is allowed according to the terms of the 2-clause BSD license.
+
+if(NOT Eigen3_FIND_VERSION)
+  if(NOT Eigen3_FIND_VERSION_MAJOR)
+    set(Eigen3_FIND_VERSION_MAJOR 2)
+  endif(NOT Eigen3_FIND_VERSION_MAJOR)
+  if(NOT Eigen3_FIND_VERSION_MINOR)
+    set(Eigen3_FIND_VERSION_MINOR 91)
+  endif(NOT Eigen3_FIND_VERSION_MINOR)
+  if(NOT Eigen3_FIND_VERSION_PATCH)
+    set(Eigen3_FIND_VERSION_PATCH 0)
+  endif(NOT Eigen3_FIND_VERSION_PATCH)
+
+  set(Eigen3_FIND_VERSION "${Eigen3_FIND_VERSION_MAJOR}.${Eigen3_FIND_VERSION_MINOR}.${Eigen3_FIND_VERSION_PATCH}")
+endif(NOT Eigen3_FIND_VERSION)
+
+macro(_eigen3_check_version)
+  file(READ "${EIGEN3_INCLUDE_DIR}/Eigen/src/Core/util/Macros.h" _eigen3_version_header)
+
+  string(REGEX MATCH "define[ \t]+EIGEN_WORLD_VERSION[ \t]+([0-9]+)" _eigen3_world_version_match "${_eigen3_version_header}")
+  set(EIGEN3_WORLD_VERSION "${CMAKE_MATCH_1}")
+  string(REGEX MATCH "define[ \t]+EIGEN_MAJOR_VERSION[ \t]+([0-9]+)" _eigen3_major_version_match "${_eigen3_version_header}")
+  set(EIGEN3_MAJOR_VERSION "${CMAKE_MATCH_1}")
+  string(REGEX MATCH "define[ \t]+EIGEN_MINOR_VERSION[ \t]+([0-9]+)" _eigen3_minor_version_match "${_eigen3_version_header}")
+  set(EIGEN3_MINOR_VERSION "${CMAKE_MATCH_1}")
+
+  set(EIGEN3_VERSION ${EIGEN3_WORLD_VERSION}.${EIGEN3_MAJOR_VERSION}.${EIGEN3_MINOR_VERSION})
+  if(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
+    set(EIGEN3_VERSION_OK FALSE)
+  else(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
+    set(EIGEN3_VERSION_OK TRUE)
+  endif(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
+
+  if(NOT EIGEN3_VERSION_OK)
+
+    message(STATUS "Eigen3 version ${EIGEN3_VERSION} found in ${EIGEN3_INCLUDE_DIR}, "
+                   "but at least version ${Eigen3_FIND_VERSION} is required")
+  endif(NOT EIGEN3_VERSION_OK)
+endmacro(_eigen3_check_version)
+
+if (EIGEN3_INCLUDE_DIR)
+
+  # in cache already
+  _eigen3_check_version()
+  set(EIGEN3_FOUND ${EIGEN3_VERSION_OK})
+
+else (EIGEN3_INCLUDE_DIR)
+
+  find_path(EIGEN3_INCLUDE_DIR NAMES signature_of_eigen3_matrix_library
+      PATHS
+      ${CMAKE_INSTALL_PREFIX}/include
+      ${KDE4_INCLUDE_DIR}
+      PATH_SUFFIXES eigen3 eigen
+    )
+
+  if(EIGEN3_INCLUDE_DIR)
+    _eigen3_check_version()
+  endif(EIGEN3_INCLUDE_DIR)
+
+  include(FindPackageHandleStandardArgs)
+  find_package_handle_standard_args(Eigen3 DEFAULT_MSG EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK)
+
+  mark_as_advanced(EIGEN3_INCLUDE_DIR)
+
+endif(EIGEN3_INCLUDE_DIR)
+
diff --git a/cmake/custom/pcmsolver.cmake b/cmake/custom/pcmsolver.cmake
index 0e1a32a..9bfe9c5 100644
--- a/cmake/custom/pcmsolver.cmake
+++ b/cmake/custom/pcmsolver.cmake
@@ -23,18 +23,18 @@ set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}
 set(CMAKECONFIG_INSTALL_DIR "share/cmake/${PROJECT_NAME}")
 
 if(NOT DEFINED PYMOD_INSTALL_LIBDIR)
-  message(STATUS "Setting (unspecified) option PYMOD_INSTALL_LIBDIR: python")
-  set(PYMOD_INSTALL_LIBDIR "python" CACHE STRING "Location within CMAKE_INSTALL_LIBDIR to which Python modules are installed" FORCE)
+  message(STATUS "Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /python")
+  set(PYMOD_INSTALL_LIBDIR "/python" CACHE STRING "Location within CMAKE_INSTALL_LIBDIR to which Python modules are installed" FORCE)
 else()
-  message(STATUS "Setting option PYMOD_INSTALL_LIBDIR: ${PYMOD_INSTALL_LIBDIR}")
+  message(STATUS "Setting option PYMOD_INSTALL_LIBDIR (should start with /): ${PYMOD_INSTALL_LIBDIR}")
   set(PYMOD_INSTALL_LIBDIR "${PYMOD_INSTALL_LIBDIR}" CACHE STRING "Location within CMAKE_INSTALL_LIBDIR to which Python modules are installed" FORCE)
 endif()
-file(TO_NATIVE_PATH "${CMAKE_INSTALL_LIBDIR}/${PYMOD_INSTALL_LIBDIR}/pcmsolver" PYMOD_INSTALL_FULLDIR)
+file(TO_NATIVE_PATH "${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/pcmsolver" PYMOD_INSTALL_FULLDIR)
 
 add_custom_target(update_version
   ALL
   COMMAND
-    ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/tools/versioner.py
+    ${Python_EXECUTABLE} ${PROJECT_SOURCE_DIR}/tools/versioner.py
         --metaout ${CMAKE_CURRENT_BINARY_DIR}/metadata.py
         --cmakeout ${CMAKE_CURRENT_BINARY_DIR}/metadata.cmake
         --headerout ${CMAKE_CURRENT_BINARY_DIR}/include/VersionInfo.hpp
diff --git a/cmake/downloaded/autocmake_boost.cmake b/cmake/downloaded/autocmake_boost.cmake
index cbfabfd..6d9c9c1 100644
--- a/cmake/downloaded/autocmake_boost.cmake
+++ b/cmake/downloaded/autocmake_boost.cmake
@@ -104,6 +104,7 @@ else()
     # Read from cache, needed for rebuilds
     set(BOOST_INCLUDEDIR ${Boost_INCLUDE_DIR})
     set(BOOST_LIBRARYDIR ${Boost_LIBRARY_DIR})
+    set(Boost_VERBOSE ON)
     find_package(Boost ${BOOST_MINIMUM_REQUIRED} COMPONENTS "${BOOST_COMPONENTS_REQUIRED}")
     if(NOT Boost_FOUND)
         set(BUILD_CUSTOM_BOOST TRUE)
diff --git a/cmake/downloaded/boost_cleanup.cmake b/cmake/downloaded/boost_cleanup.cmake
index bbe878f..264bafb 100644
--- a/cmake/downloaded/boost_cleanup.cmake
+++ b/cmake/downloaded/boost_cleanup.cmake
@@ -2,10 +2,20 @@
 # licensed under BSD-3: https://github.com/coderefinery/autocmake/blob/master/LICENSE
 
 # Clean-up
-add_custom_command(
+if(WIN32)
+  # observed trouble deleting the directory on Windows + MinGW + multiple builds
+  add_custom_command(
     OUTPUT ${CUSTOM_BOOST_LOCATION}/boost.cleanedup
-    COMMAND ${CMAKE_COMMAND} -E remove_directory ${BOOST_BUILD_DIR}
     COMMAND ${CMAKE_COMMAND} -E touch ${CUSTOM_BOOST_LOCATION}/boost.cleanedup
     WORKING_DIRECTORY ${CUSTOM_BOOST_LOCATION}
     DEPENDS ${CUSTOM_BOOST_LOCATION}/boost.installed
     COMMENT "Clean-up Boost")
+else()
+  add_custom_command(
+    OUTPUT ${CUSTOM_BOOST_LOCATION}/boost.cleanedup
+    COMMAND ${CMAKE_COMMAND} -E rm -r ${BOOST_BUILD_DIR}
+    COMMAND ${CMAKE_COMMAND} -E touch ${CUSTOM_BOOST_LOCATION}/boost.cleanedup
+    WORKING_DIRECTORY ${CUSTOM_BOOST_LOCATION}
+    DEPENDS ${CUSTOM_BOOST_LOCATION}/boost.installed
+    COMMENT "Clean-up Boost")
+endif()
diff --git a/cmake/downloaded/boost_configure.cmake b/cmake/downloaded/boost_configure.cmake
index fdbe01a..6339776 100644
--- a/cmake/downloaded/boost_configure.cmake
+++ b/cmake/downloaded/boost_configure.cmake
@@ -7,7 +7,7 @@ add_custom_command(
     OUTPUT ${CUSTOM_BOOST_LOCATION}/boost.configured
     COMMAND ./bootstrap.sh --with-toolset=${toolset}
             ${select_libraries}
-	    --with-python=${PYTHON_EXECUTABLE}
+	    --with-python=${Python_EXECUTABLE}
         --prefix=${CUSTOM_BOOST_LOCATION} 1> ${CUSTOM_BOOST_LOCATION}/boost.configured.log 2> ${CUSTOM_BOOST_LOCATION}/boost.configured.err
     COMMAND ${CMAKE_COMMAND} -E touch ${CUSTOM_BOOST_LOCATION}/boost.configured
     WORKING_DIRECTORY ${BOOST_BUILD_DIR}
diff --git a/setup.py b/setup.py
index 2c30358..3b00e99 100755
--- a/setup.py
+++ b/setup.py
@@ -29,7 +29,7 @@ Options:
   --gperf                                Enable profiling with gperftools [default: False].
   --int64                                Enable 64bit integers [default: False].
   --omp                                  Enable OpenMP parallelization [default: False].
-  --python=<PYTHON_INTERPRETER>          The Python interpreter (development version) to use. [default: ''].
+  --python=<Python_EXECUTABLE>           The Python interpreter (development version) to use. [default: ''].
   --fbindings=<TEST_Fortran_API>         Enable testing of Fortran 90 API bindings <ON/OFF> [default: ON].
   --boost-headers=<BOOST_INCLUDEDIR>     Include directories for Boost [default: ''].
   --boost-libraries=<BOOST_LIBRARYDIR>   Library directories for Boost [default: ''].
@@ -65,7 +65,7 @@ def gen_cmake_command(options, arguments):
     command.append('-DENABLE_GPERFTOOLS={0}'.format(arguments['--gperf']))
     command.append('-DENABLE_64BIT_INTEGERS={0}'.format(arguments['--int64']))
     command.append('-DENABLE_OPENMP={0}'.format(arguments['--omp']))
-    command.append('-DPYTHON_INTERPRETER="{0}"'.format(arguments['--python']))
+    command.append('-DPython_EXECUTABLE="{0}"'.format(arguments['--python']))
     command.append('-DTEST_Fortran_API={0}'.format(arguments['--fbindings']))
     command.append('-DBOOST_INCLUDEDIR="{0}"'.format(arguments['--boost-headers']))
     command.append('-DBOOST_LIBRARYDIR="{0}"'.format(arguments['--boost-libraries']))
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 0c18230..06f6560 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -41,6 +41,11 @@ add_subdirectory(pedra)
 add_subdirectory(solver)
 add_subdirectory(utils)
 
+set(export_properties
+  "PCMSolver_VERSION"
+  "PCMSolver_PYMOD"
+  )
+
 if(NOT STATIC_LIBRARY_ONLY)
   add_library(pcm-shared SHARED $<TARGET_OBJECTS:pcm-objlib>)
   target_compile_definitions(pcm-shared
@@ -53,6 +58,7 @@ if(NOT STATIC_LIBRARY_ONLY)
     INTERFACE
       $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
       $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/src>
+      $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/api>
       $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
       $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
     )
@@ -68,16 +74,22 @@ if(NOT STATIC_LIBRARY_ONLY)
       MACOSX_RPATH ON
       OUTPUT_NAME "pcm"
       EXPORT_NAME "pcm"
+      PCMSolver_PYMOD "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}"
     )
+  set_property(TARGET pcm-shared APPEND PROPERTY EXPORT_PROPERTIES "${export_properties}")
   install(
     TARGETS
       pcm-shared
     EXPORT
-      "PCMSolverTargets-shared"
+      shared_interface
     RUNTIME DESTINATION
+      ${CMAKE_INSTALL_BINDIR}
+    ARCHIVE DESTINATION
       ${CMAKE_INSTALL_LIBDIR}
     LIBRARY DESTINATION
       ${CMAKE_INSTALL_LIBDIR}
+    PUBLIC_HEADER DESTINATION
+      ${CMAKE_INSTALL_INCLUDEDIR}
     )
   add_dependencies(pcm-shared generate-config-hpp)
 endif()
@@ -94,6 +106,7 @@ if(NOT SHARED_LIBRARY_ONLY)
     INTERFACE
       $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
       $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/src>
+      $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/api>
       $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
       $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
     )
@@ -105,22 +118,32 @@ if(NOT SHARED_LIBRARY_ONLY)
     PROPERTIES
        OUTPUT_NAME "pcm"
        EXPORT_NAME "pcm"
+      PCMSolver_PYMOD "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}"
     )
+  set_property(TARGET pcm-static APPEND PROPERTY EXPORT_PROPERTIES "${export_properties}")
   install(
     TARGETS
       pcm-static
     EXPORT
-      "PCMSolverTargets-static"
+      static_interface
+    RUNTIME DESTINATION
+      ${CMAKE_INSTALL_BINDIR}
     ARCHIVE DESTINATION
       ${CMAKE_INSTALL_LIBDIR}
+    LIBRARY DESTINATION
+      ${CMAKE_INSTALL_LIBDIR}
+    PUBLIC_HEADER DESTINATION
+      ${CMAKE_INSTALL_INCLUDEDIR}
     )
   add_dependencies(pcm-static generate-config-hpp)
 endif()
 
 if(STATIC_LIBRARY_ONLY)
   add_library(PCMSolver ALIAS pcm-static)
+  add_library(PCMSolver::pcm ALIAS pcm-static)
 else()
   add_library(PCMSolver ALIAS pcm-shared)
+  add_library(PCMSolver::pcm ALIAS pcm-shared)
 endif()
 
 include(GenerateExportHeader)
@@ -170,7 +193,9 @@ install(
 if(NOT STATIC_LIBRARY_ONLY)
   install(
     EXPORT
-      "PCMSolverTargets-shared"
+      shared_interface
+    FILE
+      "PCMSolverTargets-shared.cmake"
     NAMESPACE
       "PCMSolver::"
     DESTINATION
@@ -181,7 +206,9 @@ endif()
 if(NOT SHARED_LIBRARY_ONLY)
   install(
     EXPORT
-      "PCMSolverTargets-static"
+      static_interface
+    FILE
+      "PCMSolverTargets-static.cmake"
     NAMESPACE
       "PCMSolver::"
     DESTINATION
diff --git a/src/bin/CMakeLists.txt b/src/bin/CMakeLists.txt
index 458b360..b03df78 100644
--- a/src/bin/CMakeLists.txt
+++ b/src/bin/CMakeLists.txt
@@ -4,7 +4,8 @@
 #target_link_libraries(debug_wavcav solver cavity wavcav pwl wem utils)
 
 add_executable(run_pcm run_pcm.cpp)
-target_link_libraries(run_pcm PCMSolver)
+add_executable(PCMSolver::run_pcm ALIAS run_pcm)
+target_link_libraries(run_pcm PCMSolver::pcm)
 if(ENABLE_GPERFTOOLS)
   target_link_libraries(run_pcm ${GPERFTOOLS_LIBRARIES})
 endif()
@@ -23,5 +24,23 @@ set_target_properties(run_pcm
     BUILD_WITH_INSTALL_RPATH OFF
     INSTALL_RPATH "$ORIGIN/../${CMAKE_INSTALL_LIBDIR}"
     INSTALL_RPATH_USE_LINK_PATH ON
+    EXPORT_NAME "exe"
+  )
+install(
+  TARGETS
+    run_pcm
+  EXPORT
+    executable_interface
+  RUNTIME DESTINATION
+    ${CMAKE_INSTALL_BINDIR}
+  )
+install(
+  EXPORT
+    executable_interface
+  FILE
+    "PCMSolverTargets-exe.cmake"
+  NAMESPACE
+    "PCMSolver::"
+  DESTINATION
+    ${CMAKECONFIG_INSTALL_DIR}
   )
-install(TARGETS run_pcm RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
diff --git a/src/cavity/ICavity.cpp b/src/cavity/ICavity.cpp
index 9ac547f..05735bc 100644
--- a/src/cavity/ICavity.cpp
+++ b/src/cavity/ICavity.cpp
@@ -57,6 +57,7 @@ ICavity::ICavity(const Molecule & molec)
 }
 
 void ICavity::saveCavity(const std::string & fname) {
+
   // Write everything in a single .npz binary file
   unsigned int dim = static_cast<unsigned int>(nElements_);
   // Write the number of elements, it will be used to check sanity of the save/load
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index fe8da44..bc5046a 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -1,7 +1,7 @@
 cmake_policy(SET CMP0063 NEW)
 
 # Prepare "Catch" library for other executables
-set(CATCH_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/external/Catch)
+set(CATCH_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/external/Catch)
 add_library(Catch INTERFACE)
 target_include_directories(Catch INTERFACE ${CATCH_INCLUDE_DIR})
 
diff --git a/tests/input/CMakeLists.txt b/tests/input/CMakeLists.txt
index 73989d1..a6aac09 100644
--- a/tests/input/CMakeLists.txt
+++ b/tests/input/CMakeLists.txt
@@ -22,7 +22,7 @@ add_test(
   NAME
     parser_script-diffuse
   COMMAND
-    ${PYTHON_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
+    ${Python_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
      parsed = parse_pcm_input('diffuse.inp', write_out=True)"
   WORKING_DIRECTORY
     ${CMAKE_CURRENT_BINARY_DIR}
@@ -46,7 +46,7 @@ add_test(
   NAME
     parser_script-multipoles
   COMMAND
-    ${PYTHON_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
+    ${Python_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
      parsed = parse_pcm_input('multipoles.inp', write_out=True)"
   WORKING_DIRECTORY
     ${CMAKE_CURRENT_BINARY_DIR}
@@ -70,7 +70,7 @@ add_test(
   NAME
     parser_script-restart
   COMMAND
-    ${PYTHON_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
+    ${Python_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
      parsed = parse_pcm_input('restart.inp', write_out=True)"
   WORKING_DIRECTORY
     ${CMAKE_CURRENT_BINARY_DIR}
@@ -95,7 +95,7 @@ add_test(
   NAME
     parser_script-cpcm
   COMMAND
-    ${PYTHON_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
+    ${Python_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
      parsed = parse_pcm_input('cpcm.inp', write_out=True)"
   WORKING_DIRECTORY
     ${CMAKE_CURRENT_BINARY_DIR}
@@ -119,7 +119,7 @@ add_test(
   NAME
     parser_script-sharp
   COMMAND
-    ${PYTHON_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
+    ${Python_EXECUTABLE} "-c" "from pcmsolver import parse_pcm_input; \
      parsed = parse_pcm_input('sharp.inp', write_out=True)"
   WORKING_DIRECTORY
     ${CMAKE_CURRENT_BINARY_DIR}
diff --git a/tests/standalone/CMakeLists.txt b/tests/standalone/CMakeLists.txt
index 1dfc780..ce89c26 100644
--- a/tests/standalone/CMakeLists.txt
+++ b/tests/standalone/CMakeLists.txt
@@ -14,7 +14,7 @@ add_test(
   NAME
     pcmsolver_standalone
   COMMAND
-    ${PYTHON_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
+    ${Python_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
       --exe=${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}
       --inp=standalone.pcm
   WORKING_DIRECTORY
@@ -30,7 +30,7 @@ add_test(
   NAME
     pcmsolver_standalone-atoms
   COMMAND
-    ${PYTHON_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
+    ${Python_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
       --exe=${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}
       --inp=standalone_atoms.pcm
   WORKING_DIRECTORY
@@ -46,7 +46,7 @@ add_test(
   NAME
     pcmsolver_standalone-explicit
   COMMAND
-    ${PYTHON_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
+    ${Python_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
       --exe=${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}
       --inp=standalone_explicit.pcm
   WORKING_DIRECTORY
@@ -63,7 +63,7 @@ add_test(
   NAME
   pcmsolver_pNA-SPD-failure
   COMMAND
-    ${PYTHON_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
+    ${Python_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
       --exe=${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}
       --inp=pNA_SPD_failure.pcm
   WORKING_DIRECTORY
@@ -81,7 +81,7 @@ add_test(
   NAME
     pcmsolver_biphenyl-gauss-failure
   COMMAND
-    ${PYTHON_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
+    ${Python_EXECUTABLE} ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/go_pcm.py
       --exe=${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}
       --inp=biphenyl_gauss_failure.pcm
   WORKING_DIRECTORY
diff --git a/tools/getkw.py b/tools/getkw.py
index 4f07012..acb31b9 100644
--- a/tools/getkw.py
+++ b/tools/getkw.py
@@ -738,9 +738,9 @@ class GetkwParser:
         dmark = Literal('$').suppress()
         end_data = Literal('$end').suppress()
         prtable = alphanums + r'!$%&*+-./<>?@^_|~'
-        ival = Regex('[-]?\d+')
-        dval = Regex('-?\d+\.\d*([eE]?[+-]?\d+)?')
-        lval = Regex('([Yy]es|[Nn]o|[Tt]rue|[Ff]alse|[Oo]n|[Oo]ff)')
+        ival = Regex(r'[-]?\d+')
+        dval = Regex(r'-?\d+\.\d*([eE]?[+-]?\d+)?')
+        lval = Regex(r'([Yy]es|[Nn]o|[Tt]rue|[Ff]alse|[Oo]n|[Oo]ff)')
 
         # Helper definitions
 
diff --git a/tools/pcmparser.py b/tools/pcmparser.py
index f9860ff..615a98a 100644
--- a/tools/pcmparser.py
+++ b/tools/pcmparser.py
@@ -44,7 +44,6 @@ import os
 from copy import deepcopy
 import re
 
-from .getkw import Section, GetkwParser
 from .pcmdata import CODATAdict, allowedSolvents
 
 isAngstrom = False
@@ -80,6 +79,9 @@ def parse_pcm_input(inputFile, write_out=False):
 
     ...
     """
+    from importlib import reload
+    from . import getkw
+
     # Set up valid keywords.
     valid_keywords = setup_keywords()
 
@@ -88,7 +90,8 @@ def parse_pcm_input(inputFile, write_out=False):
 
     # Set up a GetKw object and let it parse our input:
     # here is where the magic happens.
-    inkw = GetkwParser().parseFile(uppercased)
+    getkw = reload(getkw)
+    inkw = getkw.GetkwParser().parseFile(uppercased)
     # Remove temporary file
     os.remove(uppercased)
     inkw.sanitize(valid_keywords)
@@ -153,6 +156,8 @@ def setup_keywords():
     """
     Sets up sections, keywords and respective callback functions.
     """
+    from .getkw import Section
+
     # Top-level section
     top = Section('toplevel', callback=verify_top)
     top.set_status(True)
@@ -470,7 +475,7 @@ def verify_medium(section):
         sys.exit(1)
 
     integrator = section.get('DIAGONALINTEGRATOR')
-    if (integrator.get() is not 'COLLOCATION'):
+    if (integrator.get() != 'COLLOCATION'):
         print('Only the collocation integrator is available')
         sys.exit(1)
 
diff --git a/tools/pyparsing.py b/tools/pyparsing.py
index a3006c1..b0161c1 100644
--- a/tools/pyparsing.py
+++ b/tools/pyparsing.py
@@ -795,7 +795,7 @@ class ParseResults(object):
         return dir(super(ParseResults, self)) + list(self.keys())
 
 
-collections.MutableMapping.register(ParseResults)
+collections.abc.MutableMapping.register(ParseResults)
 
 
 def col(loc, strg):
@@ -2092,7 +2092,7 @@ class QuotedString(Token):
             if isinstance(ret, basestring):
                 # replace escaped characters
                 if self.escChar:
-                    ret = re.sub(self.escCharReplacePattern, "\g<1>", ret)
+                    ret = re.sub(self.escCharReplacePattern, r"\g<1>", ret)
 
                 # replace escaped quotes
                 if self.escQuote:
@@ -2386,7 +2386,7 @@ class ParseExpression(ParserElement):
 
         if isinstance(exprs, basestring):
             self.exprs = [Literal(exprs)]
-        elif isinstance(exprs, collections.Sequence):
+        elif isinstance(exprs, collections.abc.Sequence):
             # if sequence of strings provided, wrap with Literal
             if all(isinstance(expr, basestring) for expr in exprs):
                 exprs = map(Literal, exprs)
@@ -3439,7 +3439,7 @@ def oneOf(strs, caseless=False, useRegex=True):
     symbols = []
     if isinstance(strs, basestring):
         symbols = strs.split()
-    elif isinstance(strs, collections.Sequence):
+    elif isinstance(strs, collections.abc.Sequence):
         symbols = list(strs[:])
     elif isinstance(strs, _generatorType):
         symbols = list(strs)
diff --git a/tools/versioner.py b/tools/versioner.py
index 6fb7892..03ad0b0 100644
--- a/tools/versioner.py
+++ b/tools/versioner.py
@@ -1,17 +1,30 @@
 #! /usr/bin/env python
 
-#
 # @BEGIN LICENSE
 #
-#   versioner.py: defines look-ahead auto-versioning from metadata.py
+# Psi4: an open-source quantum chemistry software package
+#
+# Copyright (c) 2007-2022 The Psi4 Developers.
+#
+# The copyrights for code used from other parties are included in
+# the corresponding files.
 #
-#   Copyright (c) 2017 The Psi4 Developers
+# This file is part of PCMSolver.
 #
-#   All rights reserved. Use of this source code is governed by a
-#   BSD-style license that can be found in the LICENSE file.
+# Psi4 is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3.
 #
-# @END LICENSE
+# Psi4 is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
 #
+# You should have received a copy of the GNU Lesser General Public License along
+# with Psi4; if not, write to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+#
+
 from __future__ import print_function
 
 import argparse
@@ -275,7 +288,7 @@ include(CMakePackageConfigHelpers)
 write_basic_package_version_file(
         ${{WTO}}/${{PN}}ConfigVersion.cmake
         VERSION {ver}
-        COMPATIBILITY SameMajorVersion)
+        COMPATIBILITY SameMinorVersion)
 """
 
     with open(os.path.abspath(outfile), 'w') as handle:
-- 
1.8.3.1

